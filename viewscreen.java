
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class viewscreen extends javax.swing.JFrame implements MouseMotionListener, MouseListener, KeyListener {

    String ip;

    /**
     * Creates new form viewscreen
     */
    public viewscreen(String ip) {
        initComponents();
        setSize(500, 500);
        this.ip = ip;
        lb_view.setLocation(0,0);  
        lb_view.addMouseMotionListener(this);
        lb_view.addMouseListener(this);
        this.addKeyListener(this);

        GetScreen obj = new GetScreen();
        Thread t = new Thread(obj);
        t.start();
        
    }

    public class GetScreen implements Runnable {

        @Override
        public void run() {

            while (true) {

                try {
                    HttpResponse<String> screenshot_response
                            = Unirest.get("http://" + ip + ":7777/savescreenshot")
                            .asString();
                    String responseobj = screenshot_response.getBody();
                    URL url = new URL("http://" + ip + ":7777/GetResource/src/pics/screenshot.jpg");
                    System.out.println(url.toString());
                    BufferedImage im1 = ImageIO.read(url);
                    lb_view.setIcon(new ImageIcon(im1));

                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lb_view = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lb_view.setText("jLabel1");
        jScrollPane1.setViewportView(lb_view);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 510, 370);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new viewscreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lb_view;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseDragged(MouseEvent e) {
        int x = e.getX();
        int y = e.getY();

        try {
            HttpResponse<String> coordinate_response = Unirest.get("http://" + ip + ":8888/mousedragged").queryString("x", x).queryString("y", y).asString();

            String responseObj = coordinate_response.getBody();

            System.out.println(responseObj);

//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (Exception ex) {
            Logger.getLogger(viewscreen.class.getName()).log(Level.SEVERE, null, ex);
        }

//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        int x = e.getX();
        int y = e.getY();

        try {
            HttpResponse<String> coordinate_response = Unirest.get("http://" + ip + ":8888/mousemoved").queryString("x", x).queryString("y", y).asString();

            String responseObj = coordinate_response.getBody();

            System.out.println(responseObj);

//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (Exception ex) {
            Logger.getLogger(viewscreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        try {
            int bt = e.getButton();
            HttpResponse<String> coordinate_response = Unirest.get("http://" + ip + ":8888/mouseclicked").queryString("bt", bt).asString();
            String res = coordinate_response.getBody();
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (UnirestException ex) {
            Logger.getLogger(viewscreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void mousePressed(MouseEvent me) {
    }

    @Override
    public void mouseReleased(MouseEvent me) {

        try {
            int bt = me.getButton();
            HttpResponse<String> coordinate_response = Unirest.get("http://" + ip + ":8888/mousereleased").queryString("bt", bt).asString();
             String res = coordinate_response.getBody();
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (UnirestException ex) {
            Logger.getLogger(viewscreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void mouseEntered(MouseEvent me) {
    }

    @Override
    public void mouseExited(MouseEvent me) {
    }

    @Override
    public void keyTyped(KeyEvent ke) {
    }

    @Override
    public void keyPressed(KeyEvent ke) {
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        try {
            int k = ke.getKeyCode();
            System.out.println();
            HttpResponse<String> coordinate_response = Unirest.get("http://" + ip + ":8888/keyreleased").queryString("k", k).asString();
             String res = coordinate_response.getBody();
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (UnirestException ex) {
            Logger.getLogger(viewscreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
